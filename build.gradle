buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M2'
  }
}
plugins {
  id "com.jfrog.bintray" version "1.7"
}

group 'io.kk'

apply plugin: 'java'
apply plugin: "jacoco"
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 1.8
publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
    MyPublication(MavenPublication) {
      from components.java
      groupId = "$group"
      artifactId = rootProject.name
    }
  }
}
repositories {
  mavenLocal()
  jcenter()
}

dependencies {
  compile group: 'commons-io', name: 'commons-io', version: "$commonsIoVersion"
  compile group: 'org.apache.commons', name: 'commons-lang3', version: "$commonsLang3Version"
  compile group: 'org.apache.curator', name: 'curator-recipes', version: "$zkCuratorVersion"
  compile(group: 'org.apache.kafka', name: 'kafka-clients', version: "$kafkaVersion") {
    exclude group: 'com.sun.jdmk', module: 'jmxtools'
    exclude group: 'com.sun.jmx', module: 'jmxri'
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    exclude group: 'log4j', module: 'log4j'
  }
  compile "io.vertx:vertx-codegen:$vertxVersion"
  compile group: 'org.slf4j', name: 'slf4j-api', version: "$slf4jVersion"
  compile group: 'io.vertx', name: 'vertx-web', version: "$vertxVersion"
  compile group: 'com.google.guava', name: "guava", version: "$guavaVersion"



  runtime "org.apache.logging.log4j:log4j-core:$log4JVersion"
  runtime "org.apache.logging.log4j:log4j-jul:$log4JVersion"
  runtime group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "$log4JVersion"
  runtime "org.slf4j:jul-to-slf4j:$slf4jVersion"
  testCompile "io.vertx:vertx-unit:$vertxVersion"
  testCompile "org.mockito:mockito-core:$mockitoVersion"
  testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
  testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}
task wrapper(type: Wrapper) {
  gradleVersion = '3.1'
}

test {
  reports {
    junitXml.enabled = false
    html.enabled = true
  }
  jacoco {
    append = false
    destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    classDumpFile = file("$buildDir/jacoco/classpathdumps")
  }
}

jacoco {
  toolVersion = "0.7.6.201602180812"
}

jacocoTestReport {
  reports {
    xml.enabled false
    csv.enabled false
  }
}
task testReport(type: TestReport) {
  destinationDir = file("$buildDir/reports/allTests")
  // Include the results from the `test` task in all subprojects
  reportOn subprojects*.test
}


junitPlatform {
  // platformVersion '1.0.0-SNAPSHOT'
  engines {
    // include 'junit-jupiter', 'junit-vintage'
    // exclude 'custom-engine'
  }
  tags {
    // include 'fast'
//    exclude 'slow'
  }
  includeClassNamePattern '.*Test'
  // enableStandardTestTask true
  // reportsDir "build/test-results/junit-platform" // this is the default
  logManager 'org.apache.logging.log4j.jul.LogManager'
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

bintray {
  user = System.getenv("BINTRAY_NAME")
  key = System.getenv("BINTRAY_KEY")
  publications = ['MyPublication']
  publish = true
  pkg {
    repo = 'keke-maven'
    name = 'vertx_kafka_relay'
    licenses = ['Apache-2.0']
    publicDownloadNumbers = true

    vcsUrl = 'https://github.com/keke/vertx-kafka-relay.git'
    websiteUrl = 'https://github.com/keke/vertx-kafka-relay'
    issueTrackerUrl = 'https://github.com/keke/vertx-kafka-relay/issues'
    githubRepo = "keke/vertx-kafka-relay"
    version {
      name = "$version"
      released = new Date()
    }
  }
}